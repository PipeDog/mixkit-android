plugins {
    id 'com.android.application'
}

apply plugin: 'mixkit-plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.pipedog.mixkit.example"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    // mixkit dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation project(path: ':mixkit')
    annotationProcessor project(path: ':mixkit')

    implementation project(path: ':mixkit-web')
    implementation project(path: ':mixkit-messenger')

    implementation project(path: ':mixkit-compiler')
    annotationProcessor project(path: ':mixkit-compiler')

    // System dependencies
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
}

// 测试实例方法
project.ext.registerConfig = [
        [
                'interfaceName' : 'com.pipedog.mixkit.example.testplugin.IService',
                'superClasses' : [
                        'com.pipedog.mixkit.example.testplugin.BaseService'
                ],
                'generateToClassName' : 'com.pipedog.mixkit.example.testplugin.ServiceManager',
                'generateToMethodName' : 'autoCallRegisterService',
                'registerMethodName' : 'registerService',
                'scanPackageNames' : [
                    'com.pipedog.mixkit.example.testplugin'
                ],
                'containsSuperClasses': true
        ]
]

// 测试静态方法
//project.ext.registerConfig = [
//        [
//                'interfaceName' : 'com.pipedog.mixkit.example.testplugin.IService',
//                'superClasses' : [
//                        'com.pipedog.mixkit.example.testplugin.BaseService'
//                ],
//                'generateToClassName' : 'com.pipedog.mixkit.example.testplugin.ServiceManager',
//                'generateToMethodName' : '',
//                'registerMethodName' : 'staticRegister',
//                'scanPackageNames' : [
//                        'com.pipedog.mixkit.example.testplugin'
//                ],
//                'containsSuperClasses': true
//        ]
//]

mixPluginConfig {
    registerItems = registerConfig
}
